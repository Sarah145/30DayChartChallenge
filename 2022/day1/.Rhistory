plot.caption = element_text(colour = 'grey95', size = 12),
panel.background = element_rect(fill = 'grey10', color='transparent'),
plot.background = element_rect(fill = 'grey10', color='transparent'),
plot.margin = margin(10,10,10,10)) +
coord_cartesian(clip = 'off')
ggplot(df2, aes(x = weekday, y = -monthweek)) +
geom_tile(fill='transparent', col = '#ffffff', size = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFE8C2', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 17, alpha = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFC15E', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 15)  +
geom_text(label = as.character(df2$date), aes(col = plot), show.legend = F, size = 6) +
scale_colour_manual(values = c('#ffffff', '#000000')) +
labs(title = 'My contributions to #30DayChartChallenge so far',
subtitle = paste0(fontawesome('fa-star'), paste0(rep(' ', 55), collapse = ' '), fontawesome('fa-star')),
caption = '\n@sarahe145 | #30DayChartChallenge') +
facet_wrap(~year) +
theme_void(base_size = 16) +
theme(
axis.text.x = element_text(colour = '#ffffff'),
plot.title = element_text(colour = '#ffffff', hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, family = 'fontawesome-webfont',  margin = margin(t = -17, b = 10), colour = '#FFC15E'),
plot.caption = element_text(colour = 'grey95', size = 12),
panel.background = element_rect(fill = 'grey10', color='transparent'),
plot.background = element_rect(fill = 'grey10', color='transparent'),
plot.margin = margin(10,10,10,10)) +
coord_cartesian(clip = 'off')
ggplot(df2, aes(x = weekday, y = -monthweek)) +
geom_tile(fill='transparent', col = '#ffffff', size = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFE8C2', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 17, alpha = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFC15E', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 15)  +
geom_text(label = as.character(df2$date), aes(col = plot), show.legend = F, size = 6) +
scale_colour_manual(values = c('#ffffff', '#000000')) +
labs(title = 'My contributions to #30DayChartChallenge so far',
subtitle = paste0(fontawesome('fa-star'), paste0(rep(' ', 55), collapse = ' '), fontawesome('fa-star')),
caption = '\n@sarahe145 | #30DayChartChallenge') +
facet_wrap(~year) +
theme_void(base_size = 16) +
theme(
axis.text.x = element_text(colour = '#ffffff'),
plot.title = element_text(colour = '#ffffff', hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, family = 'fontawesome-webfont',  margin = margin(t = -17, b = 10), colour = '#FFC15E'),
plot.caption = element_text(colour = 'grey95', size = 12),
strip.text = element_text(colour = 'grey95'),
panel.background = element_rect(fill = 'grey10', color='transparent'),
plot.background = element_rect(fill = 'grey10', color='transparent'),
plot.margin = margin(10,10,10,10)) +
coord_cartesian(clip = 'off')
ggplot(df2, aes(x = weekday, y = -monthweek)) +
geom_tile(fill='transparent', col = '#ffffff', size = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFE8C2', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 17, alpha = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFC15E', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 15)  +
geom_text(label = as.character(df2$date), aes(col = plot), show.legend = F, size = 6) +
scale_colour_manual(values = c('#ffffff', '#000000')) +
labs(title = 'My contributions to #30DayChartChallenge so far',
subtitle = paste0(fontawesome('fa-star'), paste0(rep(' ', 55), collapse = ' '), fontawesome('fa-star')),
caption = '\n@sarahe145 | #30DayChartChallenge') +
facet_wrap(~year) +
theme_void(base_size = 16) +
theme(
axis.text.x = element_text(colour = '#ffffff'),
plot.title = element_text(colour = '#ffffff', hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, family = 'fontawesome-webfont',  margin = margin(t = -17, b = 10), colour = '#FFC15E'),
plot.caption = element_text(colour = 'grey95', size = 12),
strip.text = element_text(colour = '#ffffff', size = 13),
panel.background = element_rect(fill = 'grey10', color='transparent'),
plot.background = element_rect(fill = 'grey10', color='transparent'),
plot.margin = margin(10,10,10,10)) +
coord_cartesian(clip = 'off')
ggplot(df2, aes(x = weekday, y = -monthweek)) +
geom_tile(fill='transparent', col = '#ffffff', size = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFE8C2', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 17, alpha = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFC15E', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 15)  +
geom_text(label = as.character(df2$date), aes(col = plot), show.legend = F, size = 6) +
scale_colour_manual(values = c('#ffffff', '#000000')) +
labs(title = 'My contributions to #30DayChartChallenge so far',
subtitle = paste0(fontawesome('fa-star'), paste0(rep(' ', 55), collapse = ' '), fontawesome('fa-star')),
caption = '\n@sarahe145 | #30DayChartChallenge') +
facet_wrap(~year) +
theme_void(base_size = 16) +
theme(
axis.text.x = element_text(colour = '#ffffff'),
plot.title = element_text(colour = '#ffffff', hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, family = 'fontawesome-webfont',  margin = margin(t = -17, b = 10), colour = '#FFC15E'),
plot.caption = element_text(colour = 'grey95', size = 12),
strip.text = element_text(colour = '#ffffff', size = 15),
panel.background = element_rect(fill = 'grey10', color='transparent'),
plot.background = element_rect(fill = 'grey10', color='transparent'),
plot.margin = margin(10,10,10,10)) +
coord_cartesian(clip = 'off')
ggplot(df2, aes(x = weekday, y = -monthweek)) +
geom_tile(fill='transparent', col = '#ffffff', size = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFE8C2', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 17, alpha = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFC15E', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 15)  +
geom_text(label = as.character(df2$date), aes(col = plot), show.legend = F, size = 6) +
scale_colour_manual(values = c('#ffffff', '#000000')) +
labs(title = 'My contributions to #30DayChartChallenge so far',
subtitle = paste0(fontawesome('fa-star'), paste0(rep(' ', 55), collapse = ' '), fontawesome('fa-star')),
caption = '\n@sarahe145 | #30DayChartChallenge') +
facet_wrap(~year) +
theme_void(base_size = 16) +
theme(
axis.text.x = element_text(colour = '#ffffff'),
plot.title = element_text(colour = '#ffffff', hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, family = 'fontawesome-webfont',  margin = margin(t = -17, b = 10), colour = '#FFC15E'),
plot.caption = element_text(colour = 'grey95', size = 12),
strip.text = element_text(colour = '#ffffff', size = 15, face = 'bold'),
panel.background = element_rect(fill = 'grey10', color='transparent'),
plot.background = element_rect(fill = 'grey10', color='transparent'),
plot.margin = margin(10,10,10,10)) +
coord_cartesian(clip = 'off')
setwd('~/Documents/30DayChartChallenge/2022/day1/')
ggsave('01-part-to-whole.png', width = 8.5, height = 5.5, dpi = 320)
showtext::showtext_opts(dpi = 320)
ggplot(df2, aes(x = weekday, y = -monthweek)) +
geom_tile(fill='transparent', col = '#ffffff', size = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFE8C2', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 17, alpha = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFC15E', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 15)  +
geom_text(label = as.character(df2$date), aes(col = plot), show.legend = F, size = 6) +
scale_colour_manual(values = c('#ffffff', '#000000')) +
labs(title = 'My contributions to #30DayChartChallenge so far',
subtitle = paste0(fontawesome('fa-star'), paste0(rep(' ', 55), collapse = ' '), fontawesome('fa-star')),
caption = '\n@sarahe145 | #30DayChartChallenge') +
facet_wrap(~year) +
theme_void(base_size = 16) +
theme(
axis.text.x = element_text(colour = '#ffffff'),
plot.title = element_text(colour = '#ffffff', hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, family = 'fontawesome-webfont',  margin = margin(t = -17, b = 10), colour = '#FFC15E'),
plot.caption = element_text(colour = 'grey95', size = 12),
strip.text = element_text(colour = '#ffffff', size = 15, face = 'bold'),
panel.background = element_rect(fill = 'grey10', color='transparent'),
plot.background = element_rect(fill = 'grey10', color='transparent'),
plot.margin = margin(10,10,10,10)) +
coord_cartesian(clip = 'off')
ggsave('01-part-to-whole.png', width = 8.5, height = 5.5, dpi = 320)
ggplot(df2, aes(x = weekday, y = -monthweek)) +
geom_tile(fill='transparent', col = '#ffffff', size = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFE8C2', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 17, alpha = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFC15E', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 15)  +
geom_text(label = as.character(df2$date), aes(col = plot), show.legend = F, size = 6) +
scale_colour_manual(values = c('#ffffff', '#000000')) +
labs(title = 'My contributions to #30DayChartChallenge so far',
subtitle = paste0(fontawesome('fa-star'), paste0(rep(' ', 55), collapse = ' '), fontawesome('fa-star')),
caption = '\n@sarahe145 | #30DayChartChallenge') +
facet_wrap(~year) +
theme_void(base_size = 16) +
theme(
axis.text.x = element_text(colour = '#ffffff'),
plot.title = element_text(colour = '#ffffff', hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, family = 'fontawesome-webfont',  margin = margin(t = -17, b = 10), colour = '#FFC15E'),
plot.caption = element_text(colour = 'grey95', size = 12),
strip.text = element_text(colour = '#ffffff', size = 15, face = 'bold', margin = margin(t = 10)),
panel.background = element_rect(fill = 'grey10', color='transparent'),
plot.background = element_rect(fill = 'grey10', color='transparent'),
plot.margin = margin(10,10,10,10)) +
coord_cartesian(clip = 'off')
ggsave('01-part-to-whole.png', width = 8.5, height = 5.5, dpi = 320)
ggplot(df2, aes(x = weekday, y = -monthweek)) +
geom_tile(fill='transparent', col = '#ffffff', size = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFE8C2', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 15, alpha = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFC15E', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 13)  +
geom_text(label = as.character(df2$date), aes(col = plot), show.legend = F, size = 6) +
scale_colour_manual(values = c('#ffffff', '#000000')) +
labs(title = 'My contributions to #30DayChartChallenge so far',
subtitle = paste0(fontawesome('fa-star'), paste0(rep(' ', 55), collapse = ' '), fontawesome('fa-star')),
caption = '\n@sarahe145 | #30DayChartChallenge') +
facet_wrap(~year) +
theme_void(base_size = 16) +
theme(
axis.text.x = element_text(colour = '#ffffff'),
plot.title = element_text(colour = '#ffffff', hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, family = 'fontawesome-webfont',  margin = margin(t = -17, b = 10), colour = '#FFC15E'),
plot.caption = element_text(colour = 'grey95', size = 12),
strip.text = element_text(colour = '#ffffff', size = 15, face = 'bold', margin = margin(t = 10)),
panel.background = element_rect(fill = 'grey10', color='transparent'),
plot.background = element_rect(fill = 'grey10', color='transparent'),
plot.margin = margin(10,10,10,10)) +
coord_cartesian(clip = 'off')
ggsave('01-part-to-whole.png', width = 8.5, height = 5.3, dpi = 320)
ggplot(df2, aes(x = weekday, y = -monthweek)) +
geom_tile(fill='transparent', col = '#ffffff', size = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFE8C2', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 13, alpha = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFC15E', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 11)  +
geom_text(label = as.character(df2$date), aes(col = plot), show.legend = F, size = 6) +
scale_colour_manual(values = c('#ffffff', '#000000')) +
labs(title = 'My contributions to #30DayChartChallenge so far',
subtitle = paste0(fontawesome('fa-star'), paste0(rep(' ', 55), collapse = ' '), fontawesome('fa-star')),
caption = '\n@sarahe145 | #30DayChartChallenge') +
facet_wrap(~year) +
theme_void(base_size = 16) +
theme(
axis.text.x = element_text(colour = '#ffffff'),
plot.title = element_text(colour = '#ffffff', hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, family = 'fontawesome-webfont',  margin = margin(t = -17, b = 10), colour = '#FFC15E'),
plot.caption = element_text(colour = 'grey95', size = 12),
strip.text = element_text(colour = '#ffffff', size = 15, face = 'bold', margin = margin(t = 10)),
panel.background = element_rect(fill = 'grey10', color='transparent'),
plot.background = element_rect(fill = 'grey10', color='transparent'),
plot.margin = margin(10,10,10,10)) +
coord_cartesian(clip = 'off')
ggsave('01-part-to-whole.png', width = 8.5, height = 5.3, dpi = 320)
ggplot(df2, aes(x = weekday, y = -monthweek)) +
geom_tile(fill='transparent', col = '#ffffff', size = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFE8C2', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 13, alpha = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFC15E', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 11)  +
geom_text(label = as.character(df2$date), aes(col = plot), show.legend = F, size = 5.5) +
scale_colour_manual(values = c('#ffffff', '#000000')) +
labs(title = 'My contributions to #30DayChartChallenge so far',
subtitle = paste0(fontawesome('fa-star'), paste0(rep(' ', 55), collapse = ' '), fontawesome('fa-star')),
caption = '\n@sarahe145 | #30DayChartChallenge') +
facet_wrap(~year) +
theme_void(base_size = 16) +
theme(
axis.text.x = element_text(colour = '#ffffff'),
plot.title = element_text(colour = '#ffffff', hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, family = 'fontawesome-webfont',  margin = margin(t = -17, b = 10), colour = '#FFC15E'),
plot.caption = element_text(colour = 'grey95', size = 12),
strip.text = element_text(colour = '#ffffff', size = 15, face = 'bold', margin = margin(t = 10)),
panel.background = element_rect(fill = 'grey10', color='transparent'),
plot.background = element_rect(fill = 'grey10', color='transparent'),
plot.margin = margin(10,10,10,10)) +
coord_cartesian(clip = 'off')
ggsave('01-part-to-whole.png', width = 8.5, height = 5.3, dpi = 320)
ggplot(df2, aes(x = weekday, y = -monthweek)) +
geom_tile(fill='transparent', col = '#ffffff', size = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFE8C2', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 13, alpha = 1) +
geom_text(data = df2 %>% filter(plot == T), col = '#FFC15E', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 11)  +
geom_text(label = as.character(df2$date), aes(col = plot), show.legend = F, size = 5.2) +
scale_colour_manual(values = c('#ffffff', '#000000')) +
labs(title = 'My contributions to #30DayChartChallenge so far',
subtitle = paste0(fontawesome('fa-star'), paste0(rep(' ', 55), collapse = ' '), fontawesome('fa-star')),
caption = '\n@sarahe145 | #30DayChartChallenge') +
facet_wrap(~year) +
theme_void(base_size = 16) +
theme(
axis.text.x = element_text(colour = '#ffffff'),
plot.title = element_text(colour = '#ffffff', hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, family = 'fontawesome-webfont',  margin = margin(t = -17, b = 10), colour = '#FFC15E'),
plot.caption = element_text(colour = 'grey95', size = 12),
strip.text = element_text(colour = '#ffffff', size = 15, face = 'bold', margin = margin(t = 10)),
panel.background = element_rect(fill = 'grey10', color='transparent'),
plot.background = element_rect(fill = 'grey10', color='transparent'),
plot.margin = margin(10,10,10,10)) +
coord_cartesian(clip = 'off')
ggsave('01-part-to-whole.png', width = 8.5, height = 5.3, dpi = 320)
ggsave('01-part-to-whole.png', width = 8.5, height = 5.1, dpi = 320)
df21 <- data.frame(date = seq.Date(from = as.Date('2021-04-01'), to = as.Date('2021-04-30'), by = 'day')) %>%
mutate(plot = day(date) %in% c(1,2,4,5,6,7,8,10,12,13,16),
dateCol = ymd(date),
weekday = wday(dateCol, label = T, week_start = 1),
date = day(dateCol),
monthweek = c(rep(1, 4), rep(seq(2, 4), each = 7), rep(5, 5)),
year = 2021)
df22 <- data.frame(date = seq.Date(from = as.Date('2022-04-01'), to = as.Date('2022-04-30'), by = 'day')) %>%
mutate(plot = day(date) %in% c(1),
dateCol = ymd(date),
weekday = wday(dateCol, label = T, week_start = 1),
date = day(dateCol),
monthweek = c(rep(1, 3), rep(seq(2, 4), each = 7), rep(5, 6)),
year = 2022)
plot_df <- rbind(df21, df22)
ggplot(plot_df, aes(x = weekday, y = -monthweek)) +
geom_tile(fill='transparent', col = '#ffffff', size = 1) +
geom_text(data = plot_df %>% filter(plot == T), col = '#FFE8C2', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 13, alpha = 1) +
geom_text(data = plot_df %>% filter(plot == T), col = '#FFC15E', label = fontawesome('fa-star'), family = 'fontawesome-webfont', size = 11)  +
geom_text(aes(label = date, col = plot), show.legend = F, size = 5.2) +
scale_colour_manual(values = c('#ffffff', '#000000')) +
labs(title = 'My contributions to #30DayChartChallenge so far',
subtitle = paste0(fontawesome('fa-star'), paste0(rep(' ', 55), collapse = ' '), fontawesome('fa-star')),
caption = '\n@sarahe145 | #30DayChartChallenge') +
facet_wrap(~year) +
theme_void(base_size = 16) +
theme(
axis.text.x = element_text(colour = '#ffffff'),
plot.title = element_text(colour = '#ffffff', hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, family = 'fontawesome-webfont',  margin = margin(t = -17, b = 10), colour = '#FFC15E'),
plot.caption = element_text(colour = 'grey95', size = 12),
strip.text = element_text(colour = '#ffffff', size = 15, face = 'bold', margin = margin(t = 10)),
panel.background = element_rect(fill = 'grey10', color='transparent'),
plot.background = element_rect(fill = 'grey10', color='transparent'),
plot.margin = margin(10,10,10,10)) +
coord_cartesian(clip = 'off')
ggsave('01-part-to-whole.png', width = 8.5, height = 5.1, dpi = 320)
library(csodata)
install.packages('csodata')
library(csodata)
toc <- cso_get_toc()
toc <- cso_get_toc()
head(toc)
df <- cso_get_data('EFE30')
head(df)
df <- cso_get_data('IIA04')
head(df)
toc %>% sample_n(20)
df <- cso_get_data('HSQ06')
head(df)
tail(colnames(df))
unique(df$Statistic)
df <- df %>% filter(Statistic == 'New House Prices')
head(df)
df <- df %>% filter(Area == 'National')
head(df)
df <- df %>% pivot_longer(3:ncol(df), names_to = 'YearQ', values_to = 'Price')
head(df)
df <- df %>% mutate(Year = as.numeric(str_extract(YearQ, '[0-9]+')))
head(df)
df <- df %>% group_by(Year) %>% mutate(YearMean = mean(Price))
head(df)
ggplot(df, aes(x = Year, y = YearMean)) + geom_point() + geom_path()
colnames(toc)
toc %>% sample_n(20) %>% select(-LastModified)
toc %>% sample_n(20) %>% pull(title)
toc %>% filter(title == 'Persons Usually Resident and Present in the State 1986 to 2016')
df <- cso_get_data('EZ039')
head(df)
unique(df$Statistic)
df %>% select(5:ncol(df))
df <- df %>% select(4:ncol(df))
df <- df %>% pivot_longer(2:ncol(df), names_to = 'Year', values_to = 'Pop') %>% group_by(Year) %>% mutate(MeanPop = mean(Pop))
head(df)
ggplot(df %>% filter(Sex == 'Both sexes'), aes(x = Year, y = Pop)) + geom_point() + geom_path()
ggplot(df %>% filter(Sex == 'Both sexes') %>% select(Year, Pop) %>% distinct(), aes(x = Year, y = Pop)) + geom_point() + geom_path()
df %>% filter(Sex == 'Both sexes')
df %>% filter(Sex == 'Both sexes', Year == '1986')
df <- cso_get_data('EZ039')
head(df)
unique(df$Means.of.Travel)
unique(df$At.Work.School.or.College)
df <- df %>% filter(Sex == 'Both sexes', `At.Work.School.or.College` == 'All persons', `Means.of.Travel` == 'All means of travel')
head(df)
df <- df %>% pivot_longer(5:ncol(df), names_to = 'Year', values_to = 'Pop')
ggplot(df, aes(x = Year, y = Pop)) + geom_point() + geom_path()
ggplot(df, aes(x = as.numeric(Year), y = Pop)) + geom_point() + geom_path()
toc %>% sample_n(20) %>% pull(title)
toc %>% sample_n(20) %>% pull(title)
toc %>% filter(title == 'Population at Each Census since 1926')
df <- cso_get_data('E2002')
head(df)
df <- df %>% pivot_longer(4:ncol(df), names_to = 'Year', values_to = 'Pop')
ggplot(df %>% filter(Sex == 'Both sexes'), aes(x = as.numeric(Year), y = Pop, col = `Age.Group`)) + geom_point() + geom_path()
toc %>% filter(str_detect(title, 'Irish speak'))
d <- cso_get_data('SAP2016T3T2NUTS')
head(d)
toc %>% filter(str_detect(title, 'Irish'))
toc %>% filter(str_detect(title, 'Irish [Ss]peak'))
d <- cso_get_data('EA039')
head(d)
unique(d$Statistic)
d <- d %>% filter(Statistic == 'Irish speakers as a percentage of total')
head(d)
d <- d %>% filter(Province == 'State')
head(d)
d <- d %>% pivot_longer(3:ncol(d), names_to = 'Year', values_to = 'Percent')
ggplot(d, aes(x = Year, y = Percent)) + geom_col()
ggplot(d, aes(x = Year, y = Percent)) + geom_col() + geom_smooth()
ggplot(d, aes(x = as.numeric(Year), y = Percent)) + geom_col() + geom_smooth()
ggplot(d, aes(x = as.numeric(Year), y = Percent)) + geom_col() + geom_col(aes(y = 100), fill = '#ffffff') + geom_smooth()
ggplot(d, aes(x = as.numeric(Year), y = Percent)) + geom_col(aes(y = 100), fill = '#ffffff') + geom_col() + geom_smooth()
library(tidyverse)
library(csodata)
d <- cso_get_data('EA039')
d <- d %>% filter(Statistic == 'Irish speakers as a percentage of total')
d <- d %>% filter(Province == 'State')
d <- d %>% pivot_longer(3:ncol(d), names_to = 'Year', values_to = 'Percent')
ggplot(d, aes(x = as.numeric(Year), y = Percent)) + geom_col(aes(y = 100), fill = '#ffffff') + geom_col() + geom_smooth()
ggplot(d, aes(y = as.numeric(Year), x = Percent)) +
geom_col(aes(x = 100), fill = '#ffffff') +
geom_col() +
geom_smooth()
ggplot(d, aes(y = as.numeric(Year), x = Percent)) +
geom_col(aes(x = 100), fill = '#ffffff') +
geom_col() #+
ggplot(d, aes(y = as.numeric(Year), x = Percent)) +
#geom_col(aes(x = 100), fill = '#ffffff') +
geom_col() #+
ggplot(d, aes(x = as.numeric(Year), y = Percent)) +
#geom_col(aes(x = 100), fill = '#ffffff') +
geom_col() #+
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
#geom_col(aes(x = 100), fill = '#ffffff') +
geom_col() #+
?geom_col
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
#geom_col(aes(x = 100), fill = '#ffffff') +
geom_col(orientation = 'x') #+
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
#geom_col(aes(x = 100), fill = '#ffffff') +
geom_col(orientation = 'y') #+
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y') +
geom_col(orientation = 'y') #+
geom_smooth(orientation = 'y')
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y') +
geom_col(orientation = 'y') +
geom_smooth(orientation = 'y')
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y') +
geom_col(orientation = 'y') +
geom_smooth(orientation = 'y') +
scale_y_continuous(breaks = unique(d$Year))
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y') +
geom_col(orientation = 'y') +
geom_smooth(orientation = 'y') +
scale_y_continuous(breaks = as.numeric(unique(d$Year)))
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y') +
geom_col(orientation = 'y') +
geom_smooth(orientation = 'y') +
scale_y_continuous(breaks = as.numeric(unique(d$Year)), reverse = T)
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y') +
geom_col(orientation = 'y') +
geom_smooth(orientation = 'y') +
scale_y_continuous(breaks = as.numeric(unique(d$Year))) +
scale_y_reverse()
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y') +
geom_col(orientation = 'y') +
geom_smooth(orientation = 'y') +
scale_y_reverse(breaks = as.numeric(unique(d$Year)))
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y') +
geom_col(orientation = 'y') +
geom_smooth(orientation = 'y') +
scale_y_reverse(breaks = as.numeric(unique(d$Year)), expand = c(0,0))
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y') +
geom_col(orientation = 'y') +
geom_smooth(orientation = 'y') +
scale_y_reverse(breaks = as.numeric(unique(d$Year))) +
scale_x_continuous(expand = c(0,0))
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y') +
geom_col(orientation = 'y', fill = '#44ab5c') +
scale_y_reverse(breaks = as.numeric(unique(d$Year))) +
scale_x_continuous(expand = c(0,0))
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y', col = '#333333') +
geom_col(orientation = 'y', fill = '#44ab5c', col = '#333333') +
scale_y_reverse(breaks = as.numeric(unique(d$Year))) +
scale_x_continuous(expand = c(0,0))
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y', col = '#333333') +
geom_col(orientation = 'y', fill = '#44ab5c', col = '#333333') +
scale_y_reverse(breaks = as.numeric(unique(d$Year))) +
scale_x_continuous(expand = c(0,0)) +
theme_bw()
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y', col = '#333333') +
geom_col(orientation = 'y', fill = '#44ab5c', col = '#333333') +
scale_y_reverse(breaks = as.numeric(unique(d$Year))) +
scale_x_continuous(expand = c(0,0)) +
theme_minimal()
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y', col = '#333333') +
geom_col(orientation = 'y', fill = '#44ab5c', col = '#333333') +
scale_y_reverse(breaks = as.numeric(unique(d$Year))) +
scale_x_continuous(expand = c(0,0)) +
theme_void()
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y', col = '#333333') +
geom_col(orientation = 'y', fill = '#44ab5c', col = '#333333') +
scale_y_reverse(breaks = as.numeric(unique(d$Year))) +
scale_x_continuous(expand = c(0,0)) +
theme_void() +
theme(axis.text = element_text(colour = '#000000'))
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y', col = '#333333') +
geom_col(orientation = 'y', fill = '#44ab5c', col = '#333333') +
scale_y_reverse(breaks = as.numeric(unique(d$Year))) +
scale_x_continuous(expand = c(0,0)) +
theme_void() +
theme(axis.text = element_text(colour = '#000000'),
axis.ticks = element_line(colour = '#333333'))
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y', col = '#333333') +
geom_col(orientation = 'y', fill = '#44ab5c', col = '#333333') +
scale_y_reverse(breaks = as.numeric(unique(d$Year))) +
scale_x_continuous(expand = c(0,0)) +
theme_void() +
theme(axis.text = element_text(colour = '#000000'),
axis.ticks = element_line(colour = '#333333', size = 1))
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y', col = '#333333') +
geom_col(orientation = 'y', fill = '#44ab5c', col = '#333333') +
scale_y_reverse(breaks = as.numeric(unique(d$Year)), expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
theme_void() +
theme(axis.text = element_text(colour = '#000000'),
axis.ticks = element_line(colour = '#333333', size = 1))
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y', col = '#333333') +
geom_col(orientation = 'y', fill = '#44ab5c', col = '#333333') +
scale_y_reverse(breaks = as.numeric(unique(d$Year)), expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
labs(title = '<span style=color:#44ab5c>Irish speakers</span> as a percentage of the total population (1861-2016)') +
theme_void() +
theme(axis.text = element_text(colour = '#000000'),
axis.ticks = element_line(colour = '#333333', size = 1),
plot.title = element_markdown())
library(ggtext)
ggplot(d, aes(x = Percent, y = as.numeric(Year))) +
geom_col(aes(x = 100), fill = '#ffffff', orientation = 'y', col = '#333333') +
geom_col(orientation = 'y', fill = '#44ab5c', col = '#333333') +
scale_y_reverse(breaks = as.numeric(unique(d$Year)), expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
labs(title = '<span style=color:#44ab5c>Irish speakers</span> as a percentage of the total population (1861-2016)') +
theme_void() +
theme(axis.text = element_text(colour = '#000000'),
axis.ticks = element_line(colour = '#333333', size = 1),
plot.title = element_markdown())
