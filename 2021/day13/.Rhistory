plot.background = element_blank(),
plot.margin = margin(0,0,0,0)) +
coord_flip()
ggplot(df, aes(x = 0, y = col_share, fill = col_hex)) +
as_reference(
geom_col(position = 'fill', show.legend = F),
id = "displace_map"
) +
with_displacement(
geom_text(data = data.frame(x = 0, y = 0.5,
label = 'The Distribution (and lack) of colour\nin my wardrobe'),
aes(x=x,y=y,label=label), inherit.aes = F, col = 'white', size = 10),
x_map = ch_red("displace_map"),
y_map = ch_blue("displace_map"),
x_scale = unit(0.025, 'npc'),
id = "text"
) +
scale_fill_identity() +
scale_x_continuous(expand = c(0,0)) +
scale_y_reverse(expand = c(0,0)) +
theme_void() +
theme(panel.background = element_blank(),
plot.background = element_blank(),
plot.margin = margin(0,0,0,0)) +
coord_flip()
ggplot(df, aes(x = 0, y = col_share, fill = col_hex)) +
geom_col(position = 'fill', show.legend = F) +
geom_text(data = data.frame(x = 0, y = 0.5,
label = 'The Distribution (and lack) of colour\nin my wardrobe'),
aes(x=x,y=y,label=label), inherit.aes = F, col = 'white', size = 10)) +
scale_fill_identity() +
scale_x_continuous(expand = c(0,0)) +
scale_y_reverse(expand = c(0,0)) +
theme_void() +
theme(panel.background = element_blank(),
plot.background = element_blank(),
plot.margin = margin(0,0,0,0)) +
coord_flip()
ggplot(df, aes(x = 0, y = col_share, fill = col_hex)) +
geom_col(position = 'fill', show.legend = F) +
geom_text(data = data.frame(x = 0, y = 0.5,
label = 'The Distribution (and lack) of colour\nin my wardrobe'),
aes(x=x,y=y,label=label), inherit.aes = F, col = 'white', size = 10) +
scale_fill_identity() +
scale_x_continuous(expand = c(0,0)) +
scale_y_reverse(expand = c(0,0)) +
theme_void() +
theme(panel.background = element_blank(),
plot.background = element_blank(),
plot.margin = margin(0,0,0,0)) +
coord_flip()
ggplot(df, aes(x = 0, y = col_share, fill = col_hex)) +
geom_col(position = 'fill', show.legend = F) +
geom_text(data = data.frame(x = 0, y = 0.5,
label = 'The distribution (and lack) of colour\nin my wardrobe'),
aes(x=x,y=y,label=label), inherit.aes = F, col = 'white', size = 10) +
scale_fill_identity() +
scale_x_continuous(expand = c(0,0)) +
scale_y_reverse(expand = c(0,0)) +
theme_void() +
theme(panel.background = element_blank(),
plot.background = element_blank(),
plot.margin = margin(0,0,0,0)) +
coord_flip()
ggsave('~/Documents/30DayChartChallenge/strips.png', dpi = 500)
52+39
df <- df %>%
rownames_to_column() %>%
filter(keep == 'True') %>%
mutate(timepoint = case_when(
timepoint == 'TRT' ~ 'TRT (ex vivo)',
str_detect(timepoint, 'D[1-9]') ~ 'TRT (in vivo)',
timepoint == 'R' ~ 'Relapse',
timepoint == 'nan' ~ 'Healthy',
timepoint == 'D0' ~ 'Diagnosis'
),
donor_status = ifelse(timepoint == 'Healthy', 'Healthy', 'AML'),
ct = case_when(
str_detect(celltype1, 'CD14.Mono') ~ 'CD14.Mono',
str_detect(celltype1, 'CD8.[EC]M') ~ 'CD8.M',
str_detect(celltype1, 'CD4.N') ~ 'CD4.N',
str_detect(celltype1, 'GMP') ~ 'GMP',
str_detect(celltype1, 'CLP') ~ 'CLP',
celltype1 %in% c('Megakaryocyte.Prog', 'Early.Eryth', 'Early.Baso') ~ 'MEP',
celltype1 %in% c('HSC', 'CMP.LMPP') ~ 'HSC.MPP',
T ~ celltype1
))
df <- read.csv('~/Documents/Project/bone_marrow_analysis/data/integrated_umap.csv', sep = '\t', row.names = 1)
df <- df %>%
rownames_to_column() %>%
filter(keep == 'True') %>%
mutate(timepoint = case_when(
timepoint == 'TRT' ~ 'TRT (ex vivo)',
str_detect(timepoint, 'D[1-9]') ~ 'TRT (in vivo)',
timepoint == 'R' ~ 'Relapse',
timepoint == 'nan' ~ 'Healthy',
timepoint == 'D0' ~ 'Diagnosis'
),
donor_status = ifelse(timepoint == 'Healthy', 'Healthy', 'AML'),
ct = case_when(
str_detect(celltype1, 'CD14.Mono') ~ 'CD14.Mono',
str_detect(celltype1, 'CD8.[EC]M') ~ 'CD8.M',
str_detect(celltype1, 'CD4.N') ~ 'CD4.N',
str_detect(celltype1, 'GMP') ~ 'GMP',
str_detect(celltype1, 'CLP') ~ 'CLP',
celltype1 %in% c('Megakaryocyte.Prog', 'Early.Eryth', 'Early.Baso') ~ 'MEP',
celltype1 %in% c('HSC', 'CMP.LMPP') ~ 'HSC.MPP',
T ~ celltype1
))
cell_cols <- c(Plasma = '#333333', CLP = '#B2EF9B', Pre.B = '#3A7219', B = '#1b360c',
HSC.MPP = '#f7d760', MEP = '#B84F09', Late.Eryth = '#6D2F05', Megakaryocytes = '#f7a660',
GMP = '#DE9197', CD14.Mono = '#AD343E', CD16.Mono = '#bd0000',
cDC ='#ff0378', pDC = '#fc5e03',
CD4.N = '#015073', CD4.M = '#96CBFE',
CD8.N = '#16b8b2', CD8.M = '#946CD5', NK = '#4D1282',
Mesenchymal = '#702127')
df$ct <- factor(df$ct, levels = names(cell_cols))
dataset_cols <- PNWColors::pnw_palette('Sunset2', 5)
names(dataset_cols) <- unique(df$dataset)
donor_cols <- ggcute:::sugarpill_pal()(57)
names(donor_cols) <- unique(df$donor)
timepoint_cols <- c(Healthy = '#D7F2BA', Diagnosis = '#FFC15E', `TRT (ex vivo)` = '#97DFFC',
`TRT (in vivo)` = '#A188A6', Relapse = '#FF6B6B')
nrow(df)
df <- get_colors('~/Downloads/IMG_7511.JPG')
ggplot(df, aes(x = 0, y = col_share, fill = col_hex)) +
geom_col(position = 'fill', show.legend = F) +
geom_text(data = data.frame(x = 0, y = 0.5,
label = 'The distribution (and lack) of colour\nin my wardrobe'),
aes(x=x,y=y,label=label), inherit.aes = F, col = 'white', size = 10) +
scale_fill_identity() +
scale_x_continuous(expand = c(0,0)) +
scale_y_reverse(expand = c(0,0)) +
theme_void() +
theme(panel.background = element_blank(),
plot.background = element_blank(),
plot.margin = margin(0,0,0,0)) +
coord_flip()
ggsave('~/Documents/30DayChartChallenge/strips.png', dpi = 500)
library(tidyverse)
setwd('~/Documents/30DayChartChallenge/day13')
library(tidyverse)
library(ggrepel)
library(scales)
sysfonts::font_add_google('Bebas Neue')
sysfonts::font_add_google('Montserrat')
showtext::showtext_auto()
showtext::showtext_opts(dpi = 400)
df <- tibble::tribble(
~Country.name, ~PhD.income, ~Minimum.wage, ~`salary/min_wage`,
"Ireland",        1333,          1574,       0.8468869123,
"United Kingdom",        1395,          1220,        1.143442623,
"Spain",        1307,          1002,        1.304391218,
"France",        1758,          1324,        1.327794562,
"Luxembourg",        2835,          1808,        1.568030973,
"Netherlands",        2395,          1489,        1.608462055,
"Portugal",         920,           571,        1.611208406,
"Germany",        2001,          1168,        1.713184932,
"Belgium",        2373,          1216,        1.951480263
)
triangles <- data.frame(x=c(500,3000,3000, 500,500,3000),
y=c(500,3000,500, 500,3000,3000),
t=c('a', 'a', 'a',  'b', 'b', 'b'))
p <- ggplot(df, aes(x = Minimum.wage, y = PhD.income)) +
geom_polygon(data = triangles, aes(x = x, y= y, fill = t),
show.legend = F, alpha = 0.5) +
geom_abline(intercept = 0, slope = 1, lty = 2, lwd = 2.5) +
geom_point(aes(col = `salary/min_wage` > 1), size = 5, show.legend = F) +
geom_label_repel(aes(label = Country.name), size = 9, nudge_y = 10, family = 'Bebas Neue', segment.alpha = 0, fill = alpha('white', 0.65), label.size = NA) +
geom_text(data = data.frame(x = 2500, y = 2050, label = 'Line of equality', family = 'Montserrat'),
aes(x = x, y = y, label = label), size = 8) +
geom_curve(data = data.frame(x = 2500, xend = 2400, y = 2100, yend = 2300),
aes(x = x, y = y, xend = xend, yend = yend), curvature = 0.25, arrow = arrow(30L, unit(0.22, "inches"), "last", "closed"), inherit.aes = FALSE) +
scale_x_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_y_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_colour_manual(values = c('#A9E2F5', '#CAA6DB')) +
scale_fill_manual(values = c('#CAA6DB', '#A9E2F5')) +
labs(title = 'Relationship between minimum wage and PhD income',
subtitle = str_wrap('This plot shows the minimum wage and average monthly income for PhD students in several European countries. In countries above the diagonal line, PhD students tend to earn more than the minimum wage. Ireland is the only country where PhD students (on average) earn less than the minimum wage.', width = 80),
x = '\nMinimum wage', y = 'PhD income\n',
caption = 'Data source: sinaahmadi.github.io | @sarahe145 | #30DayChartChallenge') +
theme_minimal() +
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
axis.text = element_text(colour = 'black', size = 20, family = 'Montserrat'),
axis.title = element_text(colour = '#582C4D', size = 24, family = 'Montserrat', face = 'bold'),
plot.title = element_text(colour = '#582C4D', family = 'Bebas Neue', size = 30),
plot.title.position = 'plot',
plot.caption = element_text(size = 14, margin = margin(t = 20), hjust = 0.5, family = 'Montserrat', colour = '#582C4D'),
plot.subtitle = element_text(size = 19, margin = margin(t = 20, b = 30), family = 'Montserrat'),
plot.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
panel.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
plot.margin = margin(20,40,20,20)) +
coord_cartesian(clip = 'off')
ggsave('13-correlation.png', p, width = 12.5, height = 12, unit = 'in', dpi = 400)
1333*12
18000/12
1500/1574
(18500/12)/1574
185000/12
18500/12
p <- ggplot(df, aes(x = Minimum.wage, y = PhD.income)) +
geom_polygon(data = triangles, aes(x = x, y= y, fill = t),
show.legend = F, alpha = 0.5) +
geom_abline(intercept = 0, slope = 1, lty = 2, lwd = 2.5) +
geom_point(aes(col = `salary/min_wage` > 1), size = 5, show.legend = F) +
geom_label_repel(aes(label = Country.name), size = 9, nudge_y = 10, family = 'Bebas Neue', segment.alpha = 0, fill = alpha('white', 0.65), label.size = NA) +
geom_text(data = data.frame(x = 2500, y = 2050, label = 'Line of equality', family = 'Montserrat'),
aes(x = x, y = y, label = label), size = 8) +
geom_curve(data = data.frame(x = 2500, xend = 2400, y = 2100, yend = 2300),
aes(x = x, y = y, xend = xend, yend = yend), curvature = 0.25, arrow = arrow(30L, unit(0.22, "inches"), "last", "closed"), inherit.aes = FALSE) +
scale_x_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_y_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_colour_manual(values = c('#A9E2F5', '#CAA6DB')) +
scale_fill_manual(values = c('#CAA6DB', '#A9E2F5')) +
labs(title = 'Relationship between minimum wage and PhD income',
subtitle = str_wrap('This plot shows the minimum wage and monthly income for PhD students in several European countries. In countries above the diagonal line, PhD students tend to earn more than the minimum wage. Ireland is the only country where PhD students tend to earn less than the minimum wage.', width = 80),
x = '\nMinimum wage', y = 'PhD income\n',
caption = 'Data source: sinaahmadi.github.io/posts/phd-in-ireland-vs-europe-a-comparative-overview.html | @sarahe145 | #30DayChartChallenge') +
theme_minimal() +
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
axis.text = element_text(colour = 'black', size = 20, family = 'Montserrat'),
axis.title = element_text(colour = '#582C4D', size = 24, family = 'Montserrat', face = 'bold'),
plot.title = element_text(colour = '#582C4D', family = 'Bebas Neue', size = 30),
plot.title.position = 'plot',
plot.caption = element_text(size = 14, margin = margin(t = 20), hjust = 0.5, family = 'Montserrat', colour = '#582C4D'),
plot.subtitle = element_text(size = 19, margin = margin(t = 20, b = 30), family = 'Montserrat'),
plot.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
panel.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
plot.margin = margin(20,40,20,20)) +
coord_cartesian(clip = 'off')
ggsave('13-correlation.png', p, width = 12.5, height = 12, unit = 'in', dpi = 400)
p <- ggplot(df, aes(x = Minimum.wage, y = PhD.income)) +
geom_polygon(data = triangles, aes(x = x, y= y, fill = t),
show.legend = F, alpha = 0.5) +
geom_abline(intercept = 0, slope = 1, lty = 2, lwd = 2.5) +
geom_point(aes(col = `salary/min_wage` > 1), size = 5, show.legend = F) +
geom_label_repel(aes(label = Country.name), size = 9, nudge_y = 10, family = 'Bebas Neue', segment.alpha = 0, fill = alpha('white', 0.65), label.size = NA) +
geom_text(data = data.frame(x = 2500, y = 2050, label = 'Line of equality', family = 'Montserrat'),
aes(x = x, y = y, label = label), size = 8) +
geom_curve(data = data.frame(x = 2500, xend = 2400, y = 2100, yend = 2300),
aes(x = x, y = y, xend = xend, yend = yend), curvature = 0.25, arrow = arrow(30L, unit(0.22, "inches"), "last", "closed"), inherit.aes = FALSE) +
scale_x_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_y_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_colour_manual(values = c('#A9E2F5', '#CAA6DB')) +
scale_fill_manual(values = c('#CAA6DB', '#A9E2F5')) +
labs(title = 'Relationship between minimum wage and PhD income',
subtitle = str_wrap('This plot shows the minimum wage and monthly income for PhD students in several European countries. In countries above the diagonal line, PhD students tend to earn more than the minimum wage. Ireland is the only country where PhD students tend to earn less than the minimum wage.', width = 80),
x = '\nMinimum wage', y = 'PhD income\n',
caption = 'Data: sinaahmadi.github.io/posts/phd-in-ireland-vs-europe-a-comparative-overview.html | @sarahe145 | #30DayChartChallenge') +
theme_minimal() +
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
axis.text = element_text(colour = 'black', size = 20, family = 'Montserrat'),
axis.title = element_text(colour = '#582C4D', size = 24, family = 'Montserrat', face = 'bold'),
plot.title = element_text(colour = '#582C4D', family = 'Bebas Neue', size = 30),
plot.title.position = 'plot',
plot.caption = element_text(size = 14, margin = margin(t = 20), hjust = 0.5, family = 'Montserrat', colour = '#582C4D'),
plot.subtitle = element_text(size = 19, margin = margin(t = 20, b = 30), family = 'Montserrat'),
plot.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
panel.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
plot.margin = margin(20,40,20,20)) +
coord_cartesian(clip = 'off')
ggsave('13-correlation.png', p, width = 12.5, height = 12, unit = 'in', dpi = 400)
p <- ggplot(df, aes(x = Minimum.wage, y = PhD.income)) +
geom_polygon(data = triangles, aes(x = x, y= y, fill = t),
show.legend = F, alpha = 0.5) +
geom_abline(intercept = 0, slope = 1, lty = 2, lwd = 2.5) +
geom_point(aes(col = `salary/min_wage` > 1), size = 5, show.legend = F) +
geom_label_repel(aes(label = Country.name), size = 9, nudge_y = 10, family = 'Bebas Neue', segment.alpha = 0, fill = alpha('white', 0.65), label.size = NA) +
geom_text(data = data.frame(x = 2500, y = 2050, label = 'Line of equality', family = 'Montserrat'),
aes(x = x, y = y, label = label), size = 8) +
geom_curve(data = data.frame(x = 2500, xend = 2400, y = 2100, yend = 2300),
aes(x = x, y = y, xend = xend, yend = yend), curvature = 0.25, arrow = arrow(30L, unit(0.22, "inches"), "last", "closed"), inherit.aes = FALSE) +
scale_x_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_y_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_colour_manual(values = c('#A9E2F5', '#CAA6DB')) +
scale_fill_manual(values = c('#CAA6DB', '#A9E2F5')) +
labs(title = 'Relationship between minimum wage and PhD income',
subtitle = str_wrap('This plot shows the minimum wage and monthly income for PhD students in several European countries. In countries above the diagonal line, PhD students tend to earn more than the minimum wage. Ireland is the only country where PhD students tend to earn less than the minimum wage.', width = 80),
x = '\nMinimum wage', y = 'PhD income\n',
caption = 'Data: sinaahmadi.github.io/posts/phd-in-ireland-vs-europe-a-comparative-overview.html | \n@sarahe145 | #30DayChartChallenge') +
theme_minimal() +
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
axis.text = element_text(colour = 'black', size = 20, family = 'Montserrat'),
axis.title = element_text(colour = '#582C4D', size = 24, family = 'Montserrat', face = 'bold'),
plot.title = element_text(colour = '#582C4D', family = 'Bebas Neue', size = 30),
plot.title.position = 'plot',
plot.caption = element_text(size = 14, margin = margin(t = 20), hjust = 0.5, family = 'Montserrat', colour = '#582C4D'),
plot.subtitle = element_text(size = 19, margin = margin(t = 20, b = 30), family = 'Montserrat'),
plot.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
panel.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
plot.margin = margin(20,40,20,20)) +
coord_cartesian(clip = 'off')
ggsave('13-correlation.png', p, width = 12.5, height = 12, unit = 'in', dpi = 400)
p <- ggplot(df, aes(x = Minimum.wage, y = PhD.income)) +
geom_polygon(data = triangles, aes(x = x, y= y, fill = t),
show.legend = F, alpha = 0.5) +
geom_abline(intercept = 0, slope = 1, lty = 2, lwd = 2.5) +
geom_point(aes(col = `salary/min_wage` > 1), size = 5, show.legend = F) +
geom_label_repel(aes(label = Country.name), size = 9, nudge_y = 10, family = 'Bebas Neue', segment.alpha = 0, fill = alpha('white', 0.65), label.size = NA) +
geom_text(data = data.frame(x = 2500, y = 2050, label = 'Line of equality', family = 'Montserrat'),
aes(x = x, y = y, label = label), size = 8) +
geom_curve(data = data.frame(x = 2500, xend = 2400, y = 2100, yend = 2300),
aes(x = x, y = y, xend = xend, yend = yend), curvature = 0.25, arrow = arrow(30L, unit(0.22, "inches"), "last", "closed"), inherit.aes = FALSE) +
scale_x_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_y_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_colour_manual(values = c('#A9E2F5', '#CAA6DB')) +
scale_fill_manual(values = c('#CAA6DB', '#A9E2F5')) +
labs(title = 'Relationship between minimum wage and PhD income',
subtitle = str_wrap('This plot shows the minimum wage and monthly income for PhD students in several European countries. In countries above the diagonal line, PhD students tend to earn more than the minimum wage. Ireland is the only country where PhD students tend to earn less than the minimum wage.', width = 80),
x = '\nMinimum wage', y = 'PhD income\n',
caption = 'Data source: sinaahmadi.github.io/posts/phd-in-ireland-vs-europe-a-comparative-overview.html\n@sarahe145 | #30DayChartChallenge') +
theme_minimal() +
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
axis.text = element_text(colour = 'black', size = 20, family = 'Montserrat'),
axis.title = element_text(colour = '#582C4D', size = 24, family = 'Montserrat', face = 'bold'),
plot.title = element_text(colour = '#582C4D', family = 'Bebas Neue', size = 30),
plot.title.position = 'plot',
plot.caption = element_text(size = 14, margin = margin(t = 20), hjust = 1, family = 'Montserrat', colour = '#582C4D'),
plot.subtitle = element_text(size = 19, margin = margin(t = 20, b = 30), family = 'Montserrat'),
plot.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
panel.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
plot.margin = margin(20,40,20,20)) +
coord_cartesian(clip = 'off')
ggsave('13-correlation.png', p, width = 12.5, height = 12, unit = 'in', dpi = 400)
p <- ggplot(df, aes(x = Minimum.wage, y = PhD.income)) +
geom_polygon(data = triangles, aes(x = x, y= y, fill = t),
show.legend = F, alpha = 0.5) +
geom_abline(intercept = 0, slope = 1, lty = 2, lwd = 2.5) +
geom_point(aes(col = `salary/min_wage` > 1), size = 5, show.legend = F) +
geom_label_repel(aes(label = Country.name), size = 9, nudge_y = 10, family = 'Bebas Neue', segment.alpha = 0, fill = alpha('white', 0.65), label.size = NA) +
geom_text(data = data.frame(x = 2500, y = 2050, label = 'Line of equality', family = 'Montserrat'),
aes(x = x, y = y, label = label), size = 8) +
geom_curve(data = data.frame(x = 2500, xend = 2400, y = 2100, yend = 2300),
aes(x = x, y = y, xend = xend, yend = yend), curvature = 0.25, arrow = arrow(30L, unit(0.22, "inches"), "last", "closed"), inherit.aes = FALSE) +
scale_x_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_y_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_colour_manual(values = c('#A9E2F5', '#CAA6DB')) +
scale_fill_manual(values = c('#CAA6DB', '#A9E2F5')) +
labs(title = 'Relationship between minimum wage and PhD income',
subtitle = str_wrap('This plot shows the minimum wage and monthly income for PhD students in several European countries. In countries above the diagonal line, PhD students tend to earn more than the minimum wage. Ireland is the only country where PhD students tend to earn less than the minimum wage.', width = 80),
x = '\nMinimum wage', y = 'PhD income\n',
caption = '@sarahe145 | #30DayChartChallenge\nData source: sinaahmadi.github.io/posts/phd-in-ireland-vs-europe-a-comparative-overview.html') +
theme_minimal() +
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
axis.text = element_text(colour = 'black', size = 20, family = 'Montserrat'),
axis.title = element_text(colour = '#582C4D', size = 24, family = 'Montserrat', face = 'bold'),
plot.title = element_text(colour = '#582C4D', family = 'Bebas Neue', size = 30),
plot.title.position = 'plot',
plot.caption = element_text(size = 14, margin = margin(t = 20), hjust = ,1 family = 'Montserrat', colour = '#582C4D'),
plot.subtitle = element_text(size = 19, margin = margin(t = 20, b = 30), family = 'Montserrat'),
plot.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
panel.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
plot.margin = margin(20,40,20,20)) +
coord_cartesian(clip = 'off')
p <- ggplot(df, aes(x = Minimum.wage, y = PhD.income)) +
geom_polygon(data = triangles, aes(x = x, y= y, fill = t),
show.legend = F, alpha = 0.5) +
geom_abline(intercept = 0, slope = 1, lty = 2, lwd = 2.5) +
geom_point(aes(col = `salary/min_wage` > 1), size = 5, show.legend = F) +
geom_label_repel(aes(label = Country.name), size = 9, nudge_y = 10, family = 'Bebas Neue', segment.alpha = 0, fill = alpha('white', 0.65), label.size = NA) +
geom_text(data = data.frame(x = 2500, y = 2050, label = 'Line of equality', family = 'Montserrat'),
aes(x = x, y = y, label = label), size = 8) +
geom_curve(data = data.frame(x = 2500, xend = 2400, y = 2100, yend = 2300),
aes(x = x, y = y, xend = xend, yend = yend), curvature = 0.25, arrow = arrow(30L, unit(0.22, "inches"), "last", "closed"), inherit.aes = FALSE) +
scale_x_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_y_continuous(limits = c(500, 3000), expand = c(0.01,0.01), labels = dollar_format(suffix = "", prefix = "€")) +
scale_colour_manual(values = c('#A9E2F5', '#CAA6DB')) +
scale_fill_manual(values = c('#CAA6DB', '#A9E2F5')) +
labs(title = 'Relationship between minimum wage and PhD income',
subtitle = str_wrap('This plot shows the minimum wage and monthly income for PhD students in several European countries. In countries above the diagonal line, PhD students tend to earn more than the minimum wage. Ireland is the only country where PhD students tend to earn less than the minimum wage.', width = 80),
x = '\nMinimum wage', y = 'PhD income\n',
caption = '@sarahe145 | #30DayChartChallenge\nData source: sinaahmadi.github.io/posts/phd-in-ireland-vs-europe-a-comparative-overview.html') +
theme_minimal() +
theme(panel.grid = element_blank(),
axis.ticks = element_line(),
axis.text = element_text(colour = 'black', size = 20, family = 'Montserrat'),
axis.title = element_text(colour = '#582C4D', size = 24, family = 'Montserrat', face = 'bold'),
plot.title = element_text(colour = '#582C4D', family = 'Bebas Neue', size = 30),
plot.title.position = 'plot',
plot.caption = element_text(size = 14, margin = margin(t = 20), hjust = 1, family = 'Montserrat', colour = '#582C4D'),
plot.subtitle = element_text(size = 19, margin = margin(t = 20, b = 30), family = 'Montserrat'),
plot.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
panel.background = element_rect(colour = '#FDFAF3', fill = '#FDFAF3'),
plot.margin = margin(20,40,20,20)) +
coord_cartesian(clip = 'off')
ggsave('13-correlation.png', p, width = 12.5, height = 12, unit = 'in', dpi = 400)
library(tidyverse)
df <- read.csv('~/Downloads/NetflixViewingHistory.csv')
head(df)
nrow(df)
df %>% group_by(Title) %>% tally(sort = T) %>% head()
head(df)
head(df$Title)
length(unique(df$Title))
nrow(df)
df %>% group_by(Title) %>% tally(sort = T)
subset(df, df$Title == ':')
subset(df, df$Title == '')
subset(df, df$Title == ': ')
df <- df %>% filter(Title != ': ', Title != ' ')
df %>% separate(Title, into = c('Series', 'Episode'), by = ':')
?separate
df %>% separate(Title, into = c('Series', 'Episode'), sep = ':')
df <- df %>% separate(Title, into = c('Series', 'Season', 'Episode'), sep = ':')
head(df)
df %>% group_by(Episode) %>% tally()
df %>% group_by(Episode) %>% tally(sort = T)
head(df %>% filter(Series == 'Schitt's Creek', Season = 6))
head(df %>% filter(Series == "Schitt's Creek", Season = 6))
head(df %>% filter(Series == "Schitt's Creek", Season == 6))
head(df %>% filter(Series == "Schitt's Creek"))
head(df %>% filter(Series == "Schitt's Creek", Season == 'Season 5'))
head(df %>% filter(Series == "Schitt's Creek", Season == 'Season 5 '))
head(df %>% filter(Series == "Schitt's Creek", Season == ' Season 5 '))
head(df %>% filter(Series == "Schitt's Creek", Season == ' Season 5'))
nrow(df %>% filter(Series == "Schitt's Creek", Season == ' Season 5'))
df %>% filter(Series == "Schitt's Creek", Season == ' Season 5')
df %>% group_by(Series, Date) %>% tally(sort = T)
d <- df %>% group_by(Series, Date) %>% tally(sort = T)
as.data.frame(d[1:20, ])
as.data.frame(d[1:30, ])
library(tidyverse)
df <- read.csv('~/Documents/Project/bone_marrow_analysis/NATMI/d0_healthy/Delta_edges_lrc2p/All_edges_mean.csv')
head(df)
df$Sending.cluster <- as.factor(df$Sending.cluster)
h_counts <- df %>% filter(Ligand.detection.rate.in.condition.1 >= 0.25, Receptor.detection.rate.in.condition.1 >= 0.25, Edge.specificity.weight.in.condition.1 >= 0.1) %>% group_by(Sending.cluster, Target.cluster, .drop = F) %>% tally()
d0_counts <- df %>% filter(Ligand.detection.rate.in.condition.2 >= 0.25, Receptor.detection.rate.in.condition.2 >= 0.25, Edge.specificity.weight.in.condition.2 >= 0.1) %>% group_by(Sending.cluster, Target.cluster, .drop = F) %>% tally()
cell_cols <- c(Plasma = '#333333', CLP = '#B2EF9B', Pre.B = '#3A7219', B = '#1b360c',
HSC.MPP = '#f7d760', MEP = '#B84F09', Late.Eryth = '#6D2F05', Megakaryocytes = '#f7a660',
GMP = '#DE9197', CD14.Mono = '#AD343E', CD16.Mono = '#bd0000',
cDC ='#ff0378', pDC = '#fc5e03',
CD4.N = '#015073', CD4.M = '#96CBFE',
CD8.N = '#16b8b2', CD8.M = '#946CD5', NK = '#4D1282',
Mesenchymal = '#702127')
cell_order <- names(cell_cols)
d0 <- data.frame(d0_counts)
colnames(d0) <- c('from', 'to', 'value')
h <- data.frame(h_counts)
colnames(h) <- c('from', 'to', 'value')
library(circlize)
circos.par(start.degree = 130)
chordDiagram(d0, scale = F, grid.col = cell_cols, annotationTrack = c("name", "grid"), directional = 1, direction.type = c("arrows", 'diffHeight'), link.arr.type = 'big.arrow', link.arr.length = 0.1, diffHeight = -mm_h(0.5))
chordDiagram(d0, scale = F, grid.col = cell_cols, annotationTrack = c("grid"), directional = 1, direction.type = c("arrows", 'diffHeight'), link.arr.type = 'big.arrow', link.arr.length = 0.1, diffHeight = -mm_h(0.5))
head(d0)
circos.clear()
chordDiagram(d0, scale = F, grid.col = cell_cols, annotationTrack = c("name", "grid"), directional = 1, direction.type = c("arrows", 'diffHeight'), link.arr.type = 'big.arrow', link.arr.length = 0.1, diffHeight = -mm_h(0.5))
circos.clear()
chordDiagram(d0, scale = F, grid.col = cell_cols)
circos.clear()
chordDiagram(d0, scale = F)
circos.clear()
chordDiagram(d0)
res <- read.csv('~/Documents/Project/NATMI/d0_R_All_edges_mean.csv')
mal <- c('HSC/Prog', 'GMP', 'ProMono', 'Mono', 'cDC')
eff <- c('T', 'CTL', 'NK')
res$Sending.cluster <- as.factor(res$Sending.cluster)
res$Target.cluster <- as.factor(res$Target.cluster)
d0_counts <- res %>% filter(Ligand.detection.rate.in.condition.1 >= 0.25, Receptor.detection.rate.in.condition.1 >= 0.25, Edge.specificity.weight.in.condition.1 >= 0.1) %>% group_by(Sending.cluster, Target.cluster, .drop = F) %>% tally()
cell_order <- c(mal, eff)
load('~/Documents/Project/final_label_cols.Rdata')
final_label_cols['HSC/Prog'] <- '#993366'
grp <- c(rep('Immune effector', length(eff)), rep('Malignant', length(mal)))
names(grp) <- c(eff, mal)
d0 <- data.frame(d0_counts)
colnames(d0) <- c('from', 'to', 'value')
chordDiagram(d0, scale = F, grid.col = final_label_cols[cell_order], group = grp, annotationTrack = c("name", "grid"), directional = 1, direction.type = c("arrows", 'diffHeight'), link.arr.type = 'big.arrow', link.arr.length = 0.1, diffHeight = -mm_h(0.5))
head(d0)
df <- read.csv('~/Documents/Project/bone_marrow_analysis/NATMI/d0_healthy/Delta_edges_lrc2p/All_edges_mean.csv')
df$Sending.cluster <- as.factor(df$Sending.cluster)
df$Target.cluster <- as.factor(df$Target.cluster)
h_counts <- df %>% filter(Ligand.detection.rate.in.condition.1 >= 0.25, Receptor.detection.rate.in.condition.1 >= 0.25, Edge.specificity.weight.in.condition.1 >= 0.1) %>% group_by(Sending.cluster, Target.cluster, .drop = F) %>% tally()
d0_counts <- df %>% filter(Ligand.detection.rate.in.condition.2 >= 0.25, Receptor.detection.rate.in.condition.2 >= 0.25, Edge.specificity.weight.in.condition.2 >= 0.1) %>% group_by(Sending.cluster, Target.cluster, .drop = F) %>% tally()
cell_cols <- c(Plasma = '#333333', CLP = '#B2EF9B', Pre.B = '#3A7219', B = '#1b360c',
HSC.MPP = '#f7d760', MEP = '#B84F09', Late.Eryth = '#6D2F05', Megakaryocytes = '#f7a660',
GMP = '#DE9197', CD14.Mono = '#AD343E', CD16.Mono = '#bd0000',
cDC ='#ff0378', pDC = '#fc5e03',
CD4.N = '#015073', CD4.M = '#96CBFE',
CD8.N = '#16b8b2', CD8.M = '#946CD5', NK = '#4D1282',
Mesenchymal = '#702127')
cell_order <- names(cell_cols)
d0 <- data.frame(d0_counts)
colnames(d0) <- c('from', 'to', 'value')
h <- data.frame(h_counts)
colnames(h) <- c('from', 'to', 'value')
head(d0)
circos.clear()
chordDiagram(d0, scale = F, grid.col = cell_cols, annotationTrack = c("name", "grid"), directional = 1, direction.type = c("arrows", 'diffHeight'), link.arr.type = 'big.arrow', link.arr.length = 0.1, diffHeight = -mm_h(0.5))
title(paste0('Diagnosis (n = ', sum(d0$value), ')'))
circos.clear()
circos.par(start.degree = 130)
chordDiagram(h, scale = F, grid.col = cell_cols, annotationTrack = c("name", "grid"), directional = 1, direction.type = c("arrows", 'diffHeight'), link.arr.type = 'big.arrow', link.arr.length = 0.1, diffHeight = -mm_h(0.5))
title(paste0('Healthy (n = ', sum(TRT$value), ')'))
title(paste0('Healthy (n = ', sum(h$value), ')'))
circos.clear()
circos.clear()
png('~/Documents/Project/pics/health_d0_MATMI_chord.png', height = 400, width = 900)
par(mfrow = c(1,2), cex = 1.8)
circos.par(start.degree = 130)
chordDiagram(d0, scale = F, grid.col = cell_cols, annotationTrack = c("name", "grid"), directional = 1, direction.type = c("arrows", 'diffHeight'), link.arr.type = 'big.arrow', link.arr.length = 0.1, diffHeight = -mm_h(0.5))
title(paste0('Diagnosis (n = ', sum(d0$value), ')'))
circos.clear()
circos.par(start.degree = 130)
chordDiagram(h, scale = F, grid.col = cell_cols, annotationTrack = c("name", "grid"), directional = 1, direction.type = c("arrows", 'diffHeight'), link.arr.type = 'big.arrow', link.arr.length = 0.1, diffHeight = -mm_h(0.5))
title(paste0('Healthy (n = ', sum(h$value), ')'))
circos.clear()
dev.off()
