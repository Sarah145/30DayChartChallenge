scale_y_continuous(expand = c(0,0)) +
labs(y = 'Proportion of all cells', x = NULL,
title = 'Cell type proportions in samples taken at <br><span style=color:#D7F2BA>**Health**</span>, <span style=color:#FFC15E>**Diagnosis**</span>, <span style=color:#A188A6>**Treatment**</span> and <span style=color:#FF6B6B>**Relapse**</span>') +
facet_wrap(~celltype, scales = 'free', nrow = 6) +
theme_minimal(base_size = 22) +
theme(axis.text = element_text(color = 'black'),
axis.text.x = element_blank(),
plot.title = element_markdown(hjust = 0.5),
strip.text = element_text(size = 20, face = 'bold')) +
coord_cartesian(clip = 'off')
ggsave('~/Documents/Project/pics/integrated_ct_props.png', width = 12, height = 16)
ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(donor_status == 'Healthy'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(donor_status == 'Healthy') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct),
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
theme_void()
df <- read.csv('~/Documents/Project/bone_marrow_analysis/data/integrated_umap.csv', sep = '\t', row.names = 1)
df <- df %>%
rownames_to_column() %>%
filter(keep == 'True') %>%
mutate(timepoint = case_when(
timepoint == 'TRT' ~ 'TRT (ex vivo)',
str_detect(timepoint, 'D[1-9]') ~ 'TRT (in vivo)',
timepoint == 'R' ~ 'Relapse',
timepoint == 'nan' ~ 'Healthy',
timepoint == 'D0' ~ 'Diagnosis'
),
donor_status = ifelse(timepoint == 'Healthy', 'Healthy', 'AML'),
ct = case_when(
str_detect(celltype1, 'CD14.Mono') ~ 'CD14.Mono',
str_detect(celltype1, 'CD8.[EC]M') ~ 'CD8.M',
str_detect(celltype1, 'CD4.N') ~ 'CD4.N',
str_detect(celltype1, 'GMP') ~ 'GMP',
str_detect(celltype1, 'CLP') ~ 'CLP',
celltype1 %in% c('Megakaryocyte.Prog', 'Early.Eryth', 'Early.Baso') ~ 'MEP',
celltype1 %in% c('HSC', 'CMP.LMPP') ~ 'HSC.MPP',
T ~ celltype1
))
cell_cols <- c(Plasma = '#333333', CLP = '#B2EF9B', Pre.B = '#3A7219', B = '#1b360c',
HSC.MPP = '#f7d760', MEP = '#B84F09', Late.Eryth = '#6D2F05', Megakaryocytes = '#f7a660',
GMP = '#DE9197', CD14.Mono = '#AD343E', CD16.Mono = '#bd0000',
cDC ='#ff0378', pDC = '#fc5e03',
CD4.N = '#015073', CD4.M = '#96CBFE',
CD8.N = '#16b8b2', CD8.M = '#946CD5', NK = '#4D1282',
Mesenchymal = '#702127')
df$ct <- factor(df$ct, levels = names(cell_cols))
dataset_cols <- PNWColors::pnw_palette('Sunset2', 5)
names(dataset_cols) <- unique(df$dataset)
donor_cols <- ggcute:::sugarpill_pal()(57)
names(donor_cols) <- unique(df$donor)
timepoint_cols <- c(Healthy = '#D7F2BA', Diagnosis = '#FFC15E', `TRT (ex vivo)` = '#97DFFC',
`TRT (in vivo)` = '#A188A6', Relapse = '#FF6B6B')
ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(donor_status == 'Healthy'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(donor_status == 'Healthy') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct),
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
theme_void()
h <- ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(donor_status == 'Healthy'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(donor_status == 'Healthy') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct),
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
theme_void()
ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(timepoint == 'Diagnosis'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(timepoint == 'Diagnosis') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct),
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
theme_void()
h <- ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(donor_status == 'Healthy'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(donor_status == 'Healthy') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct),
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
labs(title = 'Healthy') +
theme_void(base_size = 20)
ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(timepoint == 'Diagnosis'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(timepoint == 'Diagnosis') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct),
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
labs(title = 'Diagnosis') +
theme_void(base_size = 20)
h <- ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(donor_status == 'Healthy'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(donor_status == 'Healthy') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct),
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
labs(title = 'Healthy') +
theme_void(base_size = 20) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(timepoint == 'Diagnosis'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(timepoint == 'Diagnosis') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct),
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
labs(title = 'Diagnosis') +
theme_void(base_size = 20) +
theme(plot.title = element_text(hjust = 0.5))
d0 <- ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(timepoint == 'Diagnosis'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(timepoint == 'Diagnosis') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct),
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
labs(title = 'Diagnosis') +
theme_void(base_size = 20) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(timepoint == 'TRT (in vivo)'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(timepoint == 'TRT (in vivo)') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct),
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
labs(title = 'Treatment') +
theme_void(base_size = 20) +
theme(plot.title = element_text(hjust = 0.5))
head(df %>% filter(timepoint == 'TRT (in vivo)'))
ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(timepoint == 'TRT (in vivo)'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(timepoint == 'TRT (in vivo)') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct)[levels(df$ct) %in% df %>%
filter(timepoint == 'TRT (in vivo)') %>% pull(ct) %>% unique()],
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
labs(title = 'Treatment') +
theme_void(base_size = 20) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(timepoint == 'TRT (in vivo)'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(timepoint == 'TRT (in vivo)') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct)[levels(df$ct) %in% df %>% filter(timepoint == 'TRT (in vivo)') %>% pull(ct) %>% unique()],
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
labs(title = 'Treatment') +
theme_void(base_size = 20) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(timepoint == 'TRT (in vivo)'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(timepoint == 'TRT (in vivo)') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct)[levels(df$ct) %in% unique(subset(df, df$timepoint == 'TRT (in vivo)')$ct)],
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
labs(title = 'Treatment') +
theme_void(base_size = 20) +
theme(plot.title = element_text(hjust = 0.5))
trt <- ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(timepoint == 'TRT (in vivo)'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(timepoint == 'TRT (in vivo)') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct)[levels(df$ct) %in% unique(subset(df, df$timepoint == 'TRT (in vivo)')$ct)],
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
labs(title = 'Treatment') +
theme_void(base_size = 20) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(timepoint == 'Relapse'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(timepoint == 'Relapse') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct)[levels(df$ct) %in% unique(subset(df, df$timepoint == 'Relapse')$ct)],
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
labs(title = 'Relapse') +
theme_void(base_size = 20) +
theme(plot.title = element_text(hjust = 0.5))
r <- ggplot(df, aes(x = umap1, y=umap2)) +
geom_point(size = 0.5, col = 'gray90', alpha = 0.5) +
geom_point(data = df %>% filter(timepoint == 'Relapse'),
aes(col = ct), size = 0.5, show.legend = F, alpha = 0.7) +
geom_label_repel(data = df %>%
filter(timepoint == 'Relapse') %>%
group_by(ct) %>%
summarise(x = median(umap1),
y = median(umap2)),
aes(x = x,
y = y,
label = levels(df$ct)[levels(df$ct) %in% unique(subset(df, df$timepoint == 'Relapse')$ct)],
col = ct),
show.legend = F,
label.size = NA,
label.padding = unit(0.1, "lines"),
fill = alpha(c("white"),0.8),
segment.alpha = 0,
size = 6,
nudge_y = 0.5) +
scale_color_manual(values = cell_cols) +
labs(title = 'Relapse') +
theme_void(base_size = 20) +
theme(plot.title = element_text(hjust = 0.5))
h
h + d0 + trt + r + plot_layout(nrow = 2)
ggsave('~/Documents/Project/pics/integrated_umap_timepoints.png')
ggsave('~/Documents/Project/pics/integrated_umap_timepoints.png', width = 12, height = 12)
week1 <- read.csv("~/Documents/DataViz_Tutorials/Tutorial1/week1.csv") # Read in data
week1 <- read.csv("~/Documents/DataViz_Tutorials/Tutorial_1/week1.csv") # Read in data
ggplot(week1, aes(x=x_values, y=y_values)) +
geom_point(aes(col=day, shape=day), size=3) +
geom_smooth(se= FALSE, method="lm", col="gray", size=0.5, lty=2) +
labs(title="Week 1 Data", y="y", x="x") +
scale_x_continuous(breaks=seq(2, 20, 2)) +
scale_y_continuous(breaks=seq(3, 13, 2)) +
scale_shape_manual(values=15:18) +
theme_classic()
ggsave('~/Pictures/my_first_plot.png')
library(vcfR)
library(ggforce)
library(ggfx)
library(ggtext)
# read in vcf
my_vcf <- read.vcfR('../../Sarah-Seq/29028312179.grch37.snp.vcf.gz')
my_vcf <- subset(my_vcf, my_vcf@fix[,'CHROM'] %in% paste0('chr', c(seq(1:22), 'X')))
# get variants
df <- data.frame(chr = my_vcf@fix[, 'CHROM'],
ref = my_vcf@fix[, 'REF'],
alt = my_vcf@fix[, 'ALT'])
df <- df %>% mutate(chr = str_extract(chr, '[^a-z]+'),
ref = ifelse(ref %in% c('A', 'C', 'G', 'T'), ref, 'other'),
alt = ifelse(alt %in% c('A', 'C', 'G', 'T'), alt, 'other'),
var = factor(case_when(
ref == 'other' ~ 'other',
alt == 'other' ~ 'other',
T ~ paste0(ref, '&rarr;', alt)))) %>%
group_by(chr, var) %>%
tally() %>%
mutate(percent  = n/sum(n),
log_n = log2(n),
scale_per = percent*360,
var = fct_infreq(var),
chr = factor(chr, levels = c(seq(1:22), 'X'))) %>%
arrange(wt = -n)
head(df)
chr3 <- df %>% filter(chr == 3)
head(chr3)
chr19 <- df %>% filter(chr == 19)
ggplot(chr3, aes(x = var, y= n)) + geom_col()
ggplot(chr19, aes(x = var, y= n)) + geom_col()
ggplot(chr19, aes(x = var, y= scale_per)) + geom_col()
ggplot(chr3, aes(x = var, y= scale_per)) + geom_col()
ggplot(chr3, aes(x = var, y= scale_per)) + geom_col()
ggplot(chr19, aes(x = var, y= scale_per)) + geom_col()
var(chr3$scale_per)
var(chr19$scale_per)
chr15 <- df %>% filter(chr == 15)
ggplot(chr15, aes(x = var, y= scale_per)) + geom_col()
var(chr15$scale_per)
ggplot(chr15, aes(x = var, y= log_n)) + geom_col()
ggplot(chr3, aes(x = var, y= log_n)) + geom_col()
ggplot(chr3, aes(x = var, y= log_n*pi)) + geom_col()
ggplot(chr15, aes(x = var, y= log_n*pi)) + geom_col()
ggplot(chr15) +
geom_ellipse(aes(x0 = 0, y0 = 0, a = log_n, b = log_n*pi, angle = scale_per, col = var),
show.legend = T, key_glyph = draw_key_point, size = 2)
ggplot(chr15) +
geom_ellipse(aes(x0 = 0, y0 = 0, a = log_n, b = log_n*pi, angle = chr3$scale_per, col = var),
show.legend = T, key_glyph = draw_key_point, size = 2)
ggplot(chr15, aes(x=var, y=scale_per)) + geom_col()
ggplot(chr3, aes(x=var, y=scale_per)) + geom_col()
ggplot(chr15, aes(x=var, y=scale_per)) + geom_col()
ggplot(chr3, aes(x=var, y=scale_per)) + geom_col()
chr15$scale_per
chr15$var
df %>% groupby(chr) %>% summarise(sum(n))
df %>% group_by(chr) %>% summarise(sum(n))
s <- df %>% group_by(chr) %>% summarise(sum(n))
s$`sum(n)`
chr3$scale_per
chr15$scale_per
chr19$scale_per
chr19$scale_per*pi
ggplot(chr15) +
geom_ellipse(aes(x0 = 0, y0 = 0, a = log_n, b = log_n*pi, angle = seq(1,13), col = var),
show.legend = T, key_glyph = draw_key_point, size = 2)
sd(chr3$scale_per)
sd(chr15$scale_per)
sd(chr19$scale_per)
s <- df %>% group_by(chr) %>% summarise(sd(scale_per))
s
s$`sd(scale_per)`
