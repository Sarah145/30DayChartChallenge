pal2 <- colorRampPalette(c("#B63679FF", "#FB8861FF", "#FCFDBFFF"))
cols <- pal2(100)
col <- cols[dat$Elevation_norm]
p <- ggplot(df, aes(x = x, y= 1, col = x)) +
geom_point() +
scale_color_gradientn(colors = pal2(100), name = 'Elevation') +
theme(legend.text = element_text(color = 'white'),
legend.title = element_text(color = "white"),
legend.background = element_rect(fill = "black"))
legd <- get_legend(p)
hc = HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home), level = 6, reference = TRUE, arrow = F, legend = legd)
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
hc = HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home), level = 4, reference = TRUE, arrow = F, legend = legd)
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
hc = HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home), level = 4, reference = TRUE, arrow = F, legend = legd, start_from = 'topleft', first_seg = 'vertical')
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
p <- ggplot(df, aes(x = x, y= 1, col = x)) +
geom_point() +
scale_color_gradientn(colors = pal2(100), name = 'Elevation', breaks = seq(0, 100, 25), labels = quantile(dat$Elevation, seq(0,1,.25))) +
theme(legend.text = element_text(color = 'white'),
legend.title = element_text(color = "white"),
legend.background = element_rect(fill = "black"))
legd <- get_legend(p)
hc = HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home), level = 4, reference = TRUE, arrow = F, legend = legd, start_from = 'topleft', first_seg = 'vertical')
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
library(tidyverse)
library(HilbertCurve)
library(IRanges)
library(geosphere)
library(cowplot)
setwd('~/Documents/30DayChartChallenge/day7')
dat <- read.csv('walk_04.04.21.csv')
# use distHaversine to calculate distance between longitude/latitude points
dist <- c(0)
for(i in 1:(nrow(dat)-1)){
dist <- c(dist, distHaversine(c(dat$Longitude[i], dat$Latitude[i]),
c(dat$Longitude[i+1], dat$Latitude[i+1])))
}
dat$dist_from_home <- cumsum(dist)
# create color palette
pal_func <- colorRampPalette(c("#51127C", "#B63679", "#FB8861", "#FCFDBF"))
cols <- pal_func(100)
# scale elevation between 0-100 to get corresponding color
dat$Elevation_norm <- (dat$Elevation/max(dat$Elevation))*100
col <- cols[dat$Elevation_norm]
# create iranges object for segments
ir <- IRanges(start = ceiling(dat$dist_from_home[1:(nrow(dat)-1)]),
end = ceiling(dat$dist_from_home[2:nrow(dat)]))
# create dummy plot to get legend
p <- ggplot(data.frame(x = dat$Elevation_norm), aes(x = x, y= 1, col = x)) +
geom_point() +
scale_color_gradientn(colors = pal_func(100), name = 'Elevation\n', breaks = seq(0, 100, 25),
labels = paste0(quantile(dat$Elevation, seq(0,1,.25)), 'm')) +
theme(legend.text = element_text(color = 'white', size = 8),
legend.title = element_text(color = "white", size = 9),
legend.margin = margin(0,10,10,-40),
legend.background = element_rect(fill = "black"))
legd <- get_legend(p)
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 4, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'vertical',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk this weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 4.5, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', '\nHome'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 4, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'vertical',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 4.5, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', '\nHome'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# create iranges object for segments
ir <- IRanges(start = round(dat$dist_from_home[1:(nrow(dat)-1)]),
end = round(dat$dist_from_home[2:nrow(dat)]))
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 4, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'vertical',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 4.5, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', '\nHome'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# create iranges object for segments
ir <- IRanges(start = round(dat$dist_from_home[1:(nrow(dat)-1)]),
end = ceiling(dat$dist_from_home[2:nrow(dat)]))
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 4, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'vertical',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 4.5, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', '\nHome'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 4, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'vertical',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 4.5, col = col, alpha = 0.6))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', '\nHome'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 4, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'vertical',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 4.5, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', '\nHome'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 6, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'vertical',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 4.5, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', '\nHome'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 6, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'vertical',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 4, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', '\nHome'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 6, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'vertical',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 4, col = col))
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'vertical',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 4, col = col))
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'vertical',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 4, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', '\nHome'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'vertical',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 3.5, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', '\nHome'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 3.5, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', '\nHome'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 3.5, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', '\nHome'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = F, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc_segments(hc, ir, gp = gpar(lwd = 3.5, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', 'Home\n'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd, col = 'white',
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd, reference_col = 'white',
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'))
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), gp = gpar(col = 'white'))
?HilbertCurve
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white'))
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1))
hc_segments(hc, ir, gp = gpar(lwd = 3.5, col = col))
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1))
hc_segments(hc, ir, gp = gpar(lwd = 3.5, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', 'Home\n'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1))
hc_segments(hc, ir, gp = gpar(lwd = 3.2, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', 'Home\n'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1.2))
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n\n', 'Home\n\n'), gp = gpar(fontsize = 10, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1.2))
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', 'Home\n'), gp = gpar(fontsize = 9.5, col = 'white'))
hc_text(hc, IRanges(start = 7100, end = 7100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1.2))
hc_text(hc, IRanges(start = 6000, end = 6000),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
hc_text(hc, IRanges(start = 5000, end = 5000),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
hc_text(hc, IRanges(start = 4000, end = 4000),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
hc_text(hc, IRanges(start = 4100, end = 4100),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
hc_text(hc, IRanges(start = 3900, end = 3900),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1.2))
hc_text(hc, IRanges(start = 3900, end = 3900),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1.2))
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', 'Home\n'), gp = gpar(fontsize = 8, col = 'white'))
hc_text(hc, IRanges(start = 3900, end = 3900),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1.2))
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', 'Home\n'), gp = gpar(fontsize = 8, col = 'white'))
hc_text(hc, IRanges(start = 3950, end = 3950),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1.2))
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', 'Home\n'), gp = gpar(fontsize = 8, col = 'white'))
hc_text(hc, IRanges(start = 4050, end = 4050),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1.2))
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', 'Home\n'), gp = gpar(fontsize = 8, col = 'white'))
hc_text(hc, IRanges(start = 4000, end = 4000),
labels = c('\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1.2))
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
hc_text(hc, IRanges(start = c(1, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', 'Home\n'), gp = gpar(fontsize = 8, col = 'white'))
hc_text(hc, IRanges(start = 4000, end = 4000),
labels = c('\n\n\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
hc_text(hc, IRanges(start = c(0, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', 'Home\n'), gp = gpar(fontsize = 8, col = 'white'))
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1.2))
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
hc_text(hc, IRanges(start = c(0, max(dat$dist_from_home)), end = c(1, max(dat$dist_from_home))),
labels = c('Home\n', 'Home\n'), gp = gpar(fontsize = 8, col = 'white'))
# draw and save Hilbert curve
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1.2))
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
hc_text(hc, IRanges(start = c(0, max(dat$dist_from_home)+1), end = c(0, max(dat$dist_from_home)+1)),
labels = c('Home\n', 'Home\n'), gp = gpar(fontsize = 8, col = 'white'))
hc_text(hc, IRanges(start = 4000, end = 4000),
labels = c('\n\n\n\n\n\nEach segment of the curve represents ~38m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
5**4
max(dat$dist_from_home)
9492.815/624
png('07-physical.png', bg = 'black', width = 1400, height = 1000, res = 300)
hc <- HilbertCurve(min(dat$dist_from_home), max(dat$dist_from_home),
level = 5, reference = T, arrow = F, legend = legd,
start_from = 'topleft', first_seg = 'horizontal',
background_col = 'black', padding = unit(5.25, 'mm'),
title = 'Elevation (in metres above sea level) along my walk last weekend.',
title_gp = gpar(fontsize = 10, col = 'white'), reference_gp = gpar(col = 'white', lty = 1.2))
hc_segments(hc, ir, gp = gpar(lwd = 3, col = col))
hc_text(hc, IRanges(start = c(0, max(dat$dist_from_home)+1), end = c(0, max(dat$dist_from_home)+1)),
labels = c('Home\n', 'Home\n'), gp = gpar(fontsize = 8, col = 'white'))
hc_text(hc, IRanges(start = 4000, end = 4000),
labels = c('\n\n\n\n\n\nEach segment of the curve represents ~15m of distance.'),
gp = gpar(fontsize = 6, col = 'white'))
dev.off()
library(tidyverse)
library(rtweet)
