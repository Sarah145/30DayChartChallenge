geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
geom_text(aes(x = 3, y = number/(10000*5), label = as.character(number)), family = 'Roboto', inherit.aes = F) +
facet_wrap(~dose, strip.position = "bottom")
ggplot(df %>% filter(type == 'real'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = number/(10000*5), label = as.character(number), family = 'Roboto', inherit.aes = F) +
facet_wrap(~dose, strip.position = "bottom")
ggplot(df %>% filter(type == 'real'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = '222222', family = 'Roboto') +
facet_wrap(~dose, strip.position = "bottom")
d <- ggplot(df %>% filter(type == 'real'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = '222222', family = 'Roboto') +
facet_wrap(~dose, strip.position = "bottom")
ggannotate::ggannotate(d)
d <- ggplot(df %>% filter(type == 'real'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030', label = 'fds') +
annotate(geom = 'text', x = 3, y = 13, label = '222222', family = 'Roboto') +
facet_wrap(~dose, strip.position = "bottom")
d <- ggplot(df %>% filter(type == 'real'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = '222222', family = 'Roboto') +
facet_wrap(~dose, strip.position = "bottom")
d <- ggplot(df %>% filter(type == 'real'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = '222222', family = 'Roboto Mono') +
facet_wrap(~dose, strip.position = "bottom")
d <- ggplot(df %>% filter(type == 'real', dose == 'First Dose'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = '222222', family = 'Roboto Mono') +
facet_wrap(~dose, strip.position = "bottom")
d
ggplot(df %>% filter(type == 'real', dose == 'First Dose'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = '222222', family = 'Roboto Mono') +
facet_wrap(~dose, strip.position = "bottom")
ggplot(df %>% filter(type == 'real', dose == 'First Dose'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = '222222', family = 'Roboto Mono')
ggplot(df %>% filter(type == 'real', dose == 'First Dose'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = 'target', family = 'Roboto Mono')
ggplot(df %>% filter(type == 'real', dose == 'First Dose'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = 'target', family = 'Roboto')
sysfonts::font_add_google(name = "Roboto Mono")
sysfonts::font_add_google(name = "Roboto", regular.wt = 100)
showtext::showtext_auto()
ggplot(df %>% filter(type == 'real', dose == 'First Dose'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = 'target', family = 'Roboto')
?warnings()
warnings()
library(tidyr)
library(rtweet)
library(ggtext)
library(ragg)
library(tidyverse)
library(ragg)
library(waffle)
library(extrafont)
sysfonts::font_add_google(name = "Roboto Mono")
sysfonts::font_add_google(name = "Roboto", regular.wt = 100)
df <- tribble(
~type, ~dose, ~number, ~per_pop,
'real', "First Dose", 577641, 11.6,
'real', "Second Dose", 224841, 4.5,
'target', "Second Dose", 700000, 14.2
)
ggplot(df %>% filter(type == 'real', dose == 'First Dose'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = 'target', family = 'Roboto')
ggplot(df %>% filter(type == 'real', dose == 'First Dose'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = 'target', family = 'Roboto Mono')
ggplot(df %>% filter(type == 'real'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = 'target', family = 'Roboto Mono')
ggplot(df %>% filter(type == 'real'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = 'target', family = 'Roboto Mono') +
facet_wrap(~dose)
ggplot(df %>% filter(type == 'real'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
annotate(geom = 'text', x = 3, y = 13, label = 'target', family = 'Roboto Mono') +
facet_wrap(~dose, strip.position = 'bottom')
ggplot(df %>% filter(type == 'real'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
facet_wrap(~dose, strip.position = 'bottom') +
labs(title = 'Slow Pokes.',
subtitle = str_wrap('In the first 12 weeks of 2021, Ireland administered a total of 802,502 doses of COVID19 vaccines. 577,641 people received at least one dose and 224,861 people were fully vaccinated. The target mentioned by the Minister for Health on the 13th of January was to have 700,000 people fully vaccinated by the end of March.', width = 120),
x = NULL, y = NULL)
ggplot(df %>% filter(type == 'real'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
facet_wrap(~dose, strip.position = 'bottom') +
labs(title = 'Slow Pokes.',
subtitle = str_wrap('In the first 12 weeks of 2021, Ireland administered a total of 802,502 doses of COVID19 vaccines. 577,641 people received at least one dose and 224,861 people were fully vaccinated. The target mentioned by the Minister for Health on the 13th of January was to have 700,000 people fully vaccinated by the end of March.', width = 120),
x = NULL, y = NULL) +
theme(axis.ticks.y = element_line(color = 'gray50'),
axis.text.x = element_blank(),
axis.text.y = element_text(family = "Roboto", size = 14, color = 'gray10', hjust = 0.5),
plot.title = element_text(family = "Roboto Mono", color = '#de3028'),
plot.title.position = 'plot',
plot.subtitle = element_text(family = "Roboto", hjust = 0, size = 12))
showtext::showtext_auto()
ggplot(df %>% filter(type == 'real'), aes(label = dose, values = number/10000)) +
geom_pictogram(
color = '#333333',
size = 4,
n_rows = 5,
flip = TRUE,
family = "Font Awesome 5 Free",
show.legend = F
) +
scale_label_pictogram(
name = NULL,
values = c("syringe")
) +
geom_segment(data = df %>% filter(type == 'target'), aes(x = 1, y = number/(10000*5), xend = 5, yend = number/(10000 * 5)),
lty = 2, col = '#8A3030') +
facet_wrap(~dose, strip.position = 'bottom') +
labs(title = 'Slow Pokes.',
subtitle = str_wrap('In the first 12 weeks of 2021, Ireland administered a total of 802,502 doses of COVID19 vaccines. 577,641 people received at least one dose and 224,861 people were fully vaccinated. The target mentioned by the Minister for Health on the 13th of January was to have 700,000 people fully vaccinated by the end of March.', width = 120),
x = NULL, y = NULL) +
theme(axis.ticks.y = element_line(color = 'gray50'),
axis.text.x = element_blank(),
axis.text.y = element_text(family = "Roboto", size = 14, color = 'gray10', hjust = 0.5),
plot.title = element_text(family = "Roboto Mono", color = '#de3028'),
plot.title.position = 'plot',
plot.subtitle = element_text(family = "Roboto", hjust = 0, size = 12))
sysfonts::font_add(family = 'Font Awesome 5 Free')
warnings()
df <- read.csv('~/Downloads/book_data.csv')
nrow(df)
head(df)
library(stringr)
sum(str_detect(df$genres, '[Ff]airy'))
library(dplyr)
head(df %>% filter(str_detect(genres, '[Ff]airy')))
library(tidyverse)
library(tidyverse)
library(ggfx)
library(gganimate)
sysfonts::font_add_google(name = "Montserrat", regular.wt = 300)
showtext::showtext_auto()
# read in data from IMDb:https://datasets.imdbws.com/title.basics.tsv.gz
df <- read.csv('title.basics.tsv', sep = '\t')
setwd('~/Documents/30DayChartChallenge/day4')
# read in data from IMDb:https://datasets.imdbws.com/title.basics.tsv.gz
df <- read.csv('title.basics.tsv', sep = '\t')
df <- df %>% filter(titleType == 'movie')
# get number of fantasy/sci-fi movies released each decade
fantasy <- df %>% filter(str_detect(genres, '(Sci-Fi)|(Fantasy)')) %>%
filter(startYear != '\\N') %>%
mutate(decade = 10 * (as.numeric(startYear) %/% 10)) %>%
group_by(decade) %>%
tally()
# make labels for plot
fantasy <- fantasy %>% mutate(decade_label = as.factor(ifelse(decade == 2020, 2020, paste0(decade, '-', decade + 10))),
decade_dummy = decade_label,
n_label = prettyNum(n, big.mark = ','))
p <- ggplot(fantasy, aes(x = decade_label, y = n, size = n)) +
with_blur(geom_point(aes(size = n +1000), pch = 8, col = '#FAF58A', show.legend = F),
sigma = 1) +
with_blur(geom_point(aes(size = n + 1000), col = '#FFFFFF', show.legend = F),
sigma = 4) +
geom_point(data = fantasy %>% select(-decade_label), aes(x = decade_dummy),
col = '#FAF58A', show.legend = F) +
scale_x_discrete(breaks = levels(fantasy$decade_label), limits = levels(fantasy$decade_label), expand = c(0,0), labels = unique(fantasy$decade)) +
scale_y_continuous(labels = scales::comma) +
scale_size_area(max_size = 20) +
labs(x = NULL, y = NULL, title = 'Number of Sci-Fi and Fantasy movies released each decade since 1900\n',
subtitle = 'Decade: {closest_state}, Number of releases: {fantasy$n_label[fantasy$decade_label == closest_state]}\n',
caption = '\nData: IMDb | @sarahe145 | #30DayChartChallenge') +
theme_minimal(base_size = 18) +
theme(panel.background = element_rect(color = '#5A5475', fill = '#5A5475'),
plot.background = element_rect(color = '#5A5475', fill = '#5A5475'),
panel.grid = element_blank(),
panel.grid.major.x = element_line(linetype = 4, size = 0.1, color = 'gray95'),
axis.text = element_text(color = 'gray95', family = 'Montserrat'),
axis.text.y = element_text(size = 11),
plot.margin = margin(20,40,20,20),
plot.title = element_text(size = 16.75, color = 'gray95', family = 'Montserrat'),
plot.title.position = 'plot',
plot.subtitle = element_text(color = 'gray95', family = 'Montserrat', size = 12),
plot.caption = element_text(color = 'gray85', family = 'Montserrat', size = 8, hjust = 0.5)) +
coord_cartesian(clip = 'off') +
transition_states(decade_label, wrap = T, transition_length = 1, state_length = 3) +
enter_fade() +
exit_shrink()
animate(p, height = 500, width = 850, fps = 7)
anim_save('04-magical.gif')
p <- ggplot(fantasy, aes(x = decade_label, y = n, size = n)) +
with_blur(geom_point(aes(size = n +1000), pch = 8, col = '#FAF58A', show.legend = F),
sigma = 1) +
with_blur(geom_point(aes(size = n + 1000), col = '#FFFFFF', show.legend = F),
sigma = 4) +
geom_point(data = fantasy %>% select(-decade_label), aes(x = decade_dummy),
col = '#FAF58A', show.legend = F) +
scale_x_discrete(breaks = levels(fantasy$decade_label), limits = levels(fantasy$decade_label), labels = unique(fantasy$decade)) +
scale_y_continuous(labels = scales::comma) +
scale_size_area(max_size = 20) +
labs(x = NULL, y = NULL, title = 'Number of Sci-Fi and Fantasy movies released each decade since 1900\n',
subtitle = 'Decade: {closest_state}, Number of releases: {fantasy$n_label[fantasy$decade_label == closest_state]}\n',
caption = '\nData: IMDb | @sarahe145 | #30DayChartChallenge') +
theme_minimal(base_size = 18) +
theme(panel.background = element_rect(color = '#5A5475', fill = '#5A5475'),
plot.background = element_rect(color = '#5A5475', fill = '#5A5475'),
panel.grid = element_blank(),
panel.grid.major.x = element_line(linetype = 4, size = 0.1, color = 'gray95'),
axis.text = element_text(color = 'gray95', family = 'Montserrat'),
axis.text.y = element_text(size = 11),
plot.margin = margin(20,40,20,20),
plot.title = element_text(size = 16.75, color = 'gray95', family = 'Montserrat'),
plot.title.position = 'plot',
plot.subtitle = element_text(color = 'gray95', family = 'Montserrat', size = 12),
plot.caption = element_text(color = 'gray85', family = 'Montserrat', size = 8, hjust = 0.5)) +
coord_cartesian(clip = 'off') +
transition_states(decade_label, wrap = T, transition_length = 1, state_length = 3) +
enter_fade() +
exit_shrink()
animate(p, height = 500, width = 850, fps = 7)
anim_save('04-magical.gif')
d <- df %>%
filter(startYear != '\\N') %>%
mutate(decade = 10 * (as.numeric(startYear) %/% 10)) %>%
group_by(decade) %>%
tally()
head(d)
colnames(d)[2] <- 'n_total'
s <- left_join(d, fantasy, by = "decade")
head(s)
ggplot(s, aes(x = decade)) + geom_point(aes(y = n), col = 'red') + geom_point(aes(y = n_total))
s$per <- s$n/s$n_total
ggplot(s, aes(x = decade)) + geom_point(aes(y = per))
ggplot(s, aes(x = decade)) + geom_point(aes(y = per)) + scale_x_continuous(breaks = seq(1900, 2020, 10))
.04*100
d[d$decade == 2010,]
156019/7000
7000/156019
df <- tribble(
~week, ~total_visitors, ~unique_visitors,
1, 108464, NA,
2, 95985, NA,
3, 82233, NA,
4, 85347, 33408,
5, 85514, 33012,
6, 91944, 35186,
7, 95810, 35393,
8, 103122, 37553,
9, 106740, 40226,
10, 118994, 44235,
11, 101147, 38277,
12, 126153, 44910,
13, 115326, 43412
)
ggplot(df, aes(x = week, y = total_visitors)) +
geom_point() +
geom_path()
install.packages("easyPubMed")
library(easyPubMed)
my_entrez_id <- get_pubmed_ids('experiment')
head(my_entrez_id)
